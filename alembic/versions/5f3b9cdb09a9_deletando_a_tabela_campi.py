"""deletando a tabela campi

Revision ID: 5f3b9cdb09a9
Revises: 9f5603a1178d
Create Date: 2025-10-02 19:22:26.255676

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f3b9cdb09a9'
down_revision: Union[str, Sequence[str], None] = '9f5603a1178d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('campi')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campi',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ies_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('state_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('city_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cep', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('street', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['municipios.id'], name=op.f('campi_city_id_fkey')),
    sa.ForeignKeyConstraint(['ies_id'], ['instituicoes.id'], name=op.f('campi_ies_id_fkey')),
    sa.ForeignKeyConstraint(['state_id'], ['estados.id'], name=op.f('campi_state_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('campi_pkey')),
    sa.UniqueConstraint('email', name=op.f('campi_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('id', name=op.f('campi_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('name', name=op.f('campi_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('telephone', name=op.f('campi_telephone_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
